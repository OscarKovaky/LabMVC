// <auto-generated />
using GlobalCity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GlobalCity.Migrations
{
    [DbContext(typeof(GlobalCityContext))]
    partial class GlobalCityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GlobalCity.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("char(3)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("char(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("char(35)");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CountryCode" }, "CountryCode");

                    b.ToTable("city");
                });

            modelBuilder.Entity("GlobalCity.Models.Country", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("char(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("char(52)");

                    b.Property<string>("NationalFlag")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("char(26)");

                    b.HasKey("Code");

                    b.ToTable("country");
                });

            modelBuilder.Entity("GlobalCity.Models.City", b =>
                {
                    b.HasOne("GlobalCity.Models.Country", "CountryCodeNavigation")
                        .WithMany("Cities")
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryCodeNavigation");
                });

            modelBuilder.Entity("GlobalCity.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
